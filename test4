local LocalPlayer = game.Players.LocalPlayer

local ReplicatedStorageService = game:GetService("ReplicatedStorage")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")

local BedwarsRemotes = {
	JoinQueueRemote = ReplicatedStorageService:WaitForChild("events-@easy-games/lobby:shared/event/lobby-events@getEvents.Events"):WaitForChild("joinQueue")
}

local ClientStore

task.spawn(function()
	local ClientStoreValue, Response = pcall(function()
		return require(LocalPlayer.PlayerScripts.TS.ui.store).ClientStore
	end)

	if ClientStoreValue == true and Response then
		ClientStore = require(LocalPlayer.PlayerScripts.TS.ui.store).ClientStore
	end
end)

local DesiredQueueTypeSquads = "bedwars_to4"
local InCustomMadeMatch = false

local TemplateEncodeTrue = {
	InCustomMadeMatch = {Value = true}
}

local TemplateEncodeFalse = {
	InCustomMadeMatch = {Value = false}
}

local function JoinQueueWithDesiredType(QueueType)
	BedwarsRemotes.JoinQueueRemote:FireServer({queueType = QueueType})
end

local function StartServerTeleportation()
	local TeleportData = TeleportService:GetLocalPlayerTeleportData()

	TeleportService:Teleport(game.PlaceId, LocalPlayer, TeleportData)
end

local function GetMatchState()
	local Success, Response = pcall(function()
		return ClientStore:getState().Game.matchState
	end)
	
	if not ClientStore then
		return "UnSupported"
	end
	
	if Success == true and Response then
		return Response
	end
	
	if Success == false or not Response then
		return "Nil"
	end
end

local function GetGameType()
	local Bed = game.Workspace:FindFirstChild("bed")
	
	if Bed then
		return "Game"
	end
	
	if not Bed then
		return "Lobby"
	end
end

task.spawn(function()
	if not isfile("AlSploitAutowin") then
		writefile("AlSploitInstantwin", HttpService:JSONEncode(TemplateEncodeFalse))
	end
	
	if not isfile("AlSploitAutowin") then
		InCustomMadeMatch = HttpService:JSONDecode(readfile("AlSploitAutowin")).InCustomMadeMatch.Value
	end
end)

task.spawn(function()
	local MatchState = GetMatchState()
	local GameType = GetGameType()
	
	if MatchState == 0 and GameType == "Lobby" then
		writefile("AlSploitInstantwin", HttpService:JSONEncode(TemplateEncodeFalse))

		JoinQueueWithDesiredType(DesiredQueueTypeSquads)
	end
	
	task.spawn(function()
		repeat
			task.wait()

			GameType = GetGameType()

			if GameType == "Game" and InCustomMadeMatch == false then
				writefile("AlSploitInstantwin", HttpService:JSONEncode(TemplateEncodeTrue))

				StartServerTeleportation()
			end
		until not game
	end)
	
	task.spawn(function()
		repeat
			task.wait()

			GameType = GetGameType()

			if GameType == "Game" and InCustomMadeMatch == true and GetMatchState() == 2 then
				writefile("AlSploitInstantwin", HttpService:JSONEncode(TemplateEncodeTrue))

				StartServerTeleportation()
			end
		until not game
	end)
end)

task.spawn(function()
	LocalPlayer.OnTeleport:Connect(function(TeleportState)
		if TeleportState == Enum.TeleportState.Started then
			loadstring(game:HttpGet("https://raw.githubusercontent.com/AlSploit/AlSploit/refs/heads/main/test4"))()
		end
	end)
end)
